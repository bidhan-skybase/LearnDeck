@model IEnumerable<BookMart.Models.Order>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.OrderId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                @{
                    if (User.IsInRole("Admin"))
                    {
                        <th>
                            @Html.DisplayNameFor(model => model.UserId)
                        </th>
                    }
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="6" class="text-center text-muted">No orders found.</td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderId)
                        </td>
                        <td>
                            @item.CreatedDate.ToString()
                        </td>
                        <td>
                            @item.TotalAmount.ToString("C")
                        </td>
                        
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        
                        @{
                            if (User.IsInRole("Admin"))
                            {
                                <td>
                                    @item.UserId.ToString()
                                </td> 
                            }
                        }
                        @{
                            if (User.IsInRole("Admin"))
                            {
                                <td>
                                    <a asp-action="GetOrderDetail" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-secondary">Details</a> |
                                    <a asp-action="EditOrder" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-primary">Update</a> 
                                       
                                </td>
                            }else if (User.IsInRole("User"))
                            {
                                <td>
                                    <a asp-action="GetOrderDetail" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-secondary">Details</a> |
                                    @if (item.Status != BookMart.Enums.OrderStatus.CANCELLED)
                                    {
                                        <a asp-action="CancelOrder" asp-route-id="@item.OrderId" class="btn btn-sm btn-outline-danger">Cancel Order</a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Cancelled</span>
                                    }
                                </td>
                            }
                        }
                        
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

